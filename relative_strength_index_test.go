package ta

import (
	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"
)

var _ = Describe("RSI", func() {
	It("should return the correct values", func() {
		in := toCandles([]float64{26.0, 54.0, 8.0, 77.0, 61.0, 39.0, 44.0, 91.0, 98.0, 17.0})
		out := []float64{53.591160220994475, 55.140186915887845, 67.77751138815631, 69.38322227917307, 40.32069898478417}
		result := RSI(in, 5)
		Expect(result).To(Equal(out))
	})

	It("should return the correct again", func() {
		in := toCandles([]float64{417.26, 419.34, 417.96, 417.4, 418.1, 417.61, 415.1, 414.34, 420.44, 420.77, 418.21, 418.86, 416.36, 412.64, 418.13, 414.96, 415.48, 414.99, 414.96, 410.34, 411.62, 408.78, 409.53, 413.85, 413.84, 413.82, 411.09, 413.77, 413.76})
		out := []float64{51.45826349312772, 46.17395932156328, 47.1330197040977, 46.29592669033275, 46.24177739251857, 38.72912728484402, 41.56187311184906, 37.42726212145232, 39.14887599589008, 48.02026850139838, 48.00282270087785, 47.96529015075382, 43.0206407176856, 48.62024445096774, 48.601051785639385}
		result := RSI(in, 14)
		Expect(roundedValues(result, .5, 4)).To(Equal(roundedValues(out, .5, 4)))
	})
})
